"""empty message

Revision ID: 136ea960e9de
Revises: 
Create Date: 2024-08-11 13:56:08.099407

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '136ea960e9de'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint(None, 'abstract_object', ['_id'])
    op.create_unique_constraint(None, 'comment', ['_id'])
    op.create_unique_constraint(None, 'comment_estimate', ['_id'])
    op.create_unique_constraint(None, 'decision', ['_id'])
    op.create_unique_constraint(None, 'object_estimate', ['_id'])
    op.create_unique_constraint(None, 'subscribe', ['_id'])
    op.create_unique_constraint(None, 'user', ['_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user', type_='unique')
    op.drop_constraint(None, 'subscribe', type_='unique')
    op.drop_constraint(None, 'object_estimate', type_='unique')
    op.drop_constraint(None, 'decision', type_='unique')
    op.drop_constraint(None, 'comment_estimate', type_='unique')
    op.drop_constraint(None, 'comment', type_='unique')
    op.drop_constraint(None, 'abstract_object', type_='unique')
    # ### end Alembic commands ###
